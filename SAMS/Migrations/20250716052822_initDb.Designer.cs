// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAMS.Data;

#nullable disable

namespace SAMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250716052822_initDb")]
    partial class initDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SAMS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SAMS.Models.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ApproverType")
                        .HasColumnType("int");

                    b.Property<long?>("AssetAssignedId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssetBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetSerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AssetStatus")
                        .HasColumnType("bigint");

                    b.Property<long?>("AssetStatusNavigationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AssetType")
                        .HasColumnType("int");

                    b.Property<long?>("AssignEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AssignTo")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<long?>("Category")
                        .HasColumnType("bigint");

                    b.Property<long?>("CategoryNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAquired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Department")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepartmentNavigationId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DepreciableCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepreciationInMonth")
                        .HasColumnType("int");

                    b.Property<int?>("DepreciationMethod")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisposalAppStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DisposalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisposalDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisposalMethod")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAvilable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDepreciable")
                        .HasColumnType("bit");

                    b.Property<long?>("Location")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocationNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseReceipt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qrcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrcodeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalvageValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SiteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubCategory")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubCategoryNavigationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubDepartment")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubDepartmentNavigationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Supplier")
                        .HasColumnType("bigint");

                    b.Property<long?>("SupplierNavigationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TransferAppStatus")
                        .HasColumnType("int");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int?>("WarranetyInMonth")
                        .HasColumnType("int");

                    b.Property<DateTime?>("YearOfValuation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetStatusNavigationId");

                    b.HasIndex("AssignEmployeeId");

                    b.HasIndex("CategoryNavigationId");

                    b.HasIndex("DepartmentNavigationId");

                    b.HasIndex("LocationNavigationId");

                    b.HasIndex("SiteId");

                    b.HasIndex("SubCategoryNavigationId");

                    b.HasIndex("SubDepartmentNavigationId");

                    b.HasIndex("SupplierNavigationId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("SAMS.Models.AssetAssigned", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverType")
                        .HasColumnType("int");

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AssetType")
                        .HasColumnType("int");

                    b.Property<int?>("AssignTo")
                        .HasColumnType("int");

                    b.Property<long?>("AssignedFrom")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeIdFrom")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Level1ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level1Approvedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Level2ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level2Approvedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Level3ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level3Approvedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocationIdFrom")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SiteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SiteIdFrom")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SiteId");

                    b.ToTable("AssetAssigned");
                });

            modelBuilder.Entity("SAMS.Models.AssetCategorie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetCategorie");
                });

            modelBuilder.Entity("SAMS.Models.AssetCity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetCities");
                });

            modelBuilder.Entity("SAMS.Models.AssetHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<long>("AssignEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("AssignEmployeeId");

                    b.ToTable("AssetHistory");
                });

            modelBuilder.Entity("SAMS.Models.AssetIssue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedFixDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RaisedByEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("RepairCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("RaisedByEmployeeId");

                    b.ToTable("AssetIssue");
                });

            modelBuilder.Entity("SAMS.Models.AssetLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SiteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("AssetLocation");
                });

            modelBuilder.Entity("SAMS.Models.AssetRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprovedByEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestedEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByEmployeeId");

                    b.HasIndex("AssetId");

                    b.HasIndex("RequestedEmployeeId");

                    b.ToTable("AssetRequest");
                });

            modelBuilder.Entity("SAMS.Models.AssetSite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Location")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocationNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationNavigationId");

                    b.ToTable("AssetSite");
                });

            modelBuilder.Entity("SAMS.Models.AssetStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetStatuses");
                });

            modelBuilder.Entity("SAMS.Models.AssetSubCategorie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AssetCategorieId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetCategorieId");

                    b.ToTable("AssetSubCategories");
                });

            modelBuilder.Entity("SAMS.Models.AuditLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("SAMS.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("SAMS.Models.CommonModels.ItemDropdownListModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ItemDropdownListModel");
                });

            modelBuilder.Entity("SAMS.Models.CompanyInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyInfo");
                });

            modelBuilder.Entity("SAMS.Models.DefaultIdentityOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessDeniedPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<double>("CookieExpiration")
                        .HasColumnType("float");

                    b.Property<double>("CookieExpireTimeSpan")
                        .HasColumnType("float");

                    b.Property<bool>("CookieHttpOnly")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutAllowedForNewUsers")
                        .HasColumnType("bit");

                    b.Property<double>("LockoutDefaultLockoutTimeSpanInMinutes")
                        .HasColumnType("float");

                    b.Property<int>("LockoutMaxFailedAccessAttempts")
                        .HasColumnType("int");

                    b.Property<string>("LoginPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoutPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasswordRequireDigit")
                        .HasColumnType("bit");

                    b.Property<bool>("PasswordRequireLowercase")
                        .HasColumnType("bit");

                    b.Property<bool>("PasswordRequireNonAlphanumeric")
                        .HasColumnType("bit");

                    b.Property<bool>("PasswordRequireUppercase")
                        .HasColumnType("bit");

                    b.Property<int>("PasswordRequiredLength")
                        .HasColumnType("int");

                    b.Property<int>("PasswordRequiredUniqueChars")
                        .HasColumnType("int");

                    b.Property<bool>("SignInRequireConfirmedAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("SignInRequireConfirmedEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("SlidingExpiration")
                        .HasColumnType("bit");

                    b.Property<bool>("UserRequireUniqueEmail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DefaultIdentityOption");
                });

            modelBuilder.Entity("SAMS.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("SAMS.Models.Designation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("SAMS.Models.LoginHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginHistory");
                });

            modelBuilder.Entity("SAMS.Models.ManageUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManageUserRoles");
                });

            modelBuilder.Entity("SAMS.Models.ManageUserRolesDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllowed")
                        .HasColumnType("bit");

                    b.Property<long>("ManageRoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManageRoleId");

                    b.ToTable("ManageUserRolesDetails");
                });

            modelBuilder.Entity("SAMS.Models.SMTPEmailSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSSl")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SMTPEmailSettings");
                });

            modelBuilder.Entity("SAMS.Models.SendGridSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendGridKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendGridUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SendGridSettings");
                });

            modelBuilder.Entity("SAMS.Models.SubDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SubDepartment");
                });

            modelBuilder.Entity("SAMS.Models.SubscriptionRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionRequest");
                });

            modelBuilder.Entity("SAMS.Models.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeLicense")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SAMS.Models.UserInfoFromBrowser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BrowserMajor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrowserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrowserUniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrowserVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUArchitecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceVendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Long")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfoFromBrowser");
                });

            modelBuilder.Entity("SAMS.Models.UserProfile", b =>
                {
                    b.Property<long>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserProfileId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Department")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepartmentNavigationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Designation")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsApprover")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Level1Approval")
                        .HasColumnType("bit");

                    b.Property<bool?>("Level2Approval")
                        .HasColumnType("bit");

                    b.Property<bool?>("Level3Approval")
                        .HasColumnType("bit");

                    b.Property<long?>("Location")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocationNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Site")
                        .HasColumnType("bigint");

                    b.Property<long?>("SiteNavigationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubDepartment")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubDepartmentNavigationId")
                        .HasColumnType("bigint");

                    b.HasKey("UserProfileId");

                    b.HasIndex("DepartmentNavigationId");

                    b.HasIndex("DesignationNavigationId");

                    b.HasIndex("LocationNavigationId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SiteNavigationId");

                    b.HasIndex("SubDepartmentNavigationId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SAMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SAMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SAMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAMS.Models.Asset", b =>
                {
                    b.HasOne("SAMS.Models.AssetStatus", "AssetStatusNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("AssetStatusNavigationId");

                    b.HasOne("SAMS.Models.UserProfile", "AssignEmployee")
                        .WithMany("Assets")
                        .HasForeignKey("AssignEmployeeId");

                    b.HasOne("SAMS.Models.AssetCategorie", "CategoryNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryNavigationId");

                    b.HasOne("SAMS.Models.Department", "DepartmentNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("DepartmentNavigationId");

                    b.HasOne("SAMS.Models.AssetLocation", "LocationNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("LocationNavigationId");

                    b.HasOne("SAMS.Models.AssetSite", "Site")
                        .WithMany("Assets")
                        .HasForeignKey("SiteId");

                    b.HasOne("SAMS.Models.AssetSubCategorie", "SubCategoryNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("SubCategoryNavigationId");

                    b.HasOne("SAMS.Models.SubDepartment", "SubDepartmentNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("SubDepartmentNavigationId");

                    b.HasOne("SAMS.Models.Supplier", "SupplierNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("SupplierNavigationId");

                    b.Navigation("AssetStatusNavigation");

                    b.Navigation("AssignEmployee");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("DepartmentNavigation");

                    b.Navigation("LocationNavigation");

                    b.Navigation("Site");

                    b.Navigation("SubCategoryNavigation");

                    b.Navigation("SubDepartmentNavigation");

                    b.Navigation("SupplierNavigation");
                });

            modelBuilder.Entity("SAMS.Models.AssetAssigned", b =>
                {
                    b.HasOne("SAMS.Models.Asset", "Asset")
                        .WithMany("AssetAssigneds")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.Models.UserProfile", "Employee")
                        .WithMany("AssetAssigneds")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.Models.AssetLocation", "Location")
                        .WithMany("AssetAssigneds")
                        .HasForeignKey("LocationId");

                    b.HasOne("SAMS.Models.AssetSite", "Site")
                        .WithMany("AssetAssigneds")
                        .HasForeignKey("SiteId");

                    b.Navigation("Asset");

                    b.Navigation("Employee");

                    b.Navigation("Location");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("SAMS.Models.AssetHistory", b =>
                {
                    b.HasOne("SAMS.Models.Asset", "Asset")
                        .WithMany("AssetHistories")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.Models.UserProfile", "AssignEmployee")
                        .WithMany("AssetHistories")
                        .HasForeignKey("AssignEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("AssignEmployee");
                });

            modelBuilder.Entity("SAMS.Models.AssetIssue", b =>
                {
                    b.HasOne("SAMS.Models.Asset", "Asset")
                        .WithMany("AssetIssues")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.Models.UserProfile", "RaisedByEmployee")
                        .WithMany("AssetIssues")
                        .HasForeignKey("RaisedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("RaisedByEmployee");
                });

            modelBuilder.Entity("SAMS.Models.AssetLocation", b =>
                {
                    b.HasOne("SAMS.Models.AssetSite", "Site")
                        .WithMany("AssetLocations")
                        .HasForeignKey("SiteId");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("SAMS.Models.AssetRequest", b =>
                {
                    b.HasOne("SAMS.Models.UserProfile", "ApprovedByEmployee")
                        .WithMany("AssetRequestApprovedByEmployees")
                        .HasForeignKey("ApprovedByEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAMS.Models.Asset", "Asset")
                        .WithMany("AssetRequests")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.Models.UserProfile", "RequestedEmployee")
                        .WithMany("AssetRequestRequestedEmployees")
                        .HasForeignKey("RequestedEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedByEmployee");

                    b.Navigation("Asset");

                    b.Navigation("RequestedEmployee");
                });

            modelBuilder.Entity("SAMS.Models.AssetSite", b =>
                {
                    b.HasOne("SAMS.Models.AssetCity", "LocationNavigation")
                        .WithMany("AssetSites")
                        .HasForeignKey("LocationNavigationId");

                    b.Navigation("LocationNavigation");
                });

            modelBuilder.Entity("SAMS.Models.AssetSubCategorie", b =>
                {
                    b.HasOne("SAMS.Models.AssetCategorie", "AssetCategorie")
                        .WithMany("AssetSubCategories")
                        .HasForeignKey("AssetCategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetCategorie");
                });

            modelBuilder.Entity("SAMS.Models.Comment", b =>
                {
                    b.HasOne("SAMS.Models.Asset", "Asset")
                        .WithMany("Comments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("SAMS.Models.ManageUserRolesDetail", b =>
                {
                    b.HasOne("SAMS.Models.ManageUserRole", "ManageRole")
                        .WithMany("ManageUserRolesDetails")
                        .HasForeignKey("ManageRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManageRole");
                });

            modelBuilder.Entity("SAMS.Models.SubDepartment", b =>
                {
                    b.HasOne("SAMS.Models.Department", "Department")
                        .WithMany("SubDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SAMS.Models.UserProfile", b =>
                {
                    b.HasOne("SAMS.Models.Department", "DepartmentNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("DepartmentNavigationId");

                    b.HasOne("SAMS.Models.Designation", "DesignationNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("DesignationNavigationId");

                    b.HasOne("SAMS.Models.AssetLocation", "LocationNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("LocationNavigationId");

                    b.HasOne("SAMS.Models.ManageUserRole", "Role")
                        .WithMany("UserProfiles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SAMS.Models.AssetSite", "SiteNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("SiteNavigationId");

                    b.HasOne("SAMS.Models.SubDepartment", "SubDepartmentNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("SubDepartmentNavigationId");

                    b.Navigation("DepartmentNavigation");

                    b.Navigation("DesignationNavigation");

                    b.Navigation("LocationNavigation");

                    b.Navigation("Role");

                    b.Navigation("SiteNavigation");

                    b.Navigation("SubDepartmentNavigation");
                });

            modelBuilder.Entity("SAMS.Models.Asset", b =>
                {
                    b.Navigation("AssetAssigneds");

                    b.Navigation("AssetHistories");

                    b.Navigation("AssetIssues");

                    b.Navigation("AssetRequests");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("SAMS.Models.AssetCategorie", b =>
                {
                    b.Navigation("AssetSubCategories");

                    b.Navigation("Assets");
                });

            modelBuilder.Entity("SAMS.Models.AssetCity", b =>
                {
                    b.Navigation("AssetSites");
                });

            modelBuilder.Entity("SAMS.Models.AssetLocation", b =>
                {
                    b.Navigation("AssetAssigneds");

                    b.Navigation("Assets");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SAMS.Models.AssetSite", b =>
                {
                    b.Navigation("AssetAssigneds");

                    b.Navigation("AssetLocations");

                    b.Navigation("Assets");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SAMS.Models.AssetStatus", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("SAMS.Models.AssetSubCategorie", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("SAMS.Models.Department", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("SubDepartments");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SAMS.Models.Designation", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SAMS.Models.ManageUserRole", b =>
                {
                    b.Navigation("ManageUserRolesDetails");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SAMS.Models.SubDepartment", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("SAMS.Models.Supplier", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("SAMS.Models.UserProfile", b =>
                {
                    b.Navigation("AssetAssigneds");

                    b.Navigation("AssetHistories");

                    b.Navigation("AssetIssues");

                    b.Navigation("AssetRequestApprovedByEmployees");

                    b.Navigation("AssetRequestRequestedEmployees");

                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
